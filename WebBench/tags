!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
METHOD_GET	webbench.c	38;"	d	file:
METHOD_GET	webbench1.c	38;"	d	file:
METHOD_GET	webbench2.c	38;"	d	file:
METHOD_HEAD	webbench.c	39;"	d	file:
METHOD_HEAD	webbench1.c	39;"	d	file:
METHOD_HEAD	webbench2.c	39;"	d	file:
METHOD_OPTIONS	webbench.c	40;"	d	file:
METHOD_OPTIONS	webbench1.c	40;"	d	file:
METHOD_OPTIONS	webbench2.c	40;"	d	file:
METHOD_TRACE	webbench.c	41;"	d	file:
METHOD_TRACE	webbench1.c	41;"	d	file:
METHOD_TRACE	webbench2.c	41;"	d	file:
PROGRAM_VERSION	webbench.c	42;"	d	file:
PROGRAM_VERSION	webbench1.c	42;"	d	file:
PROGRAM_VERSION	webbench2.c	42;"	d	file:
REQUEST_SIZE	webbench.c	56;"	d	file:
REQUEST_SIZE	webbench1.c	56;"	d	file:
REQUEST_SIZE	webbench2.c	56;"	d	file:
Socket	socket.c	/^int Socket(const char *host, int clientPort)$/;"	f
alarm_handler	webbench.c	/^static void alarm_handler(int signal)$/;"	f	file:
alarm_handler	webbench1.c	/^static void alarm_handler(int signal)$/;"	f	file:
alarm_handler	webbench2.c	/^static void alarm_handler(int signal)$/;"	f	file:
bench	webbench.c	/^static int bench(void)$/;"	f	file:
bench	webbench1.c	/^static int bench(void)$/;"	f	file:
bench	webbench2.c	/^static int bench(void)$/;"	f	file:
benchcore	webbench.c	/^void benchcore(const char *host,const int port,const char *req)$/;"	f
benchcore	webbench1.c	/^void benchcore(const char *host,const int port,const char *req)$/;"	f
benchcore	webbench2.c	/^void benchcore(const char *host,const int port,const char *req)$/;"	f
benchtime	webbench.c	/^int benchtime=30;$/;"	v
benchtime	webbench1.c	/^int benchtime=30;$/;"	v
benchtime	webbench2.c	/^int benchtime=30;$/;"	v
build_request	webbench.c	/^void build_request(const char *url)$/;"	f
build_request	webbench1.c	/^void build_request(const char *url)$/;"	f
build_request	webbench2.c	/^void build_request(const char *url)$/;"	f
bytes	webbench.c	/^int bytes=0;$/;"	v
bytes	webbench1.c	/^int bytes=0;$/;"	v
bytes	webbench2.c	/^int bytes=0;$/;"	v
clients	webbench.c	/^int clients=1;$/;"	v
clients	webbench1.c	/^int clients=1;$/;"	v
clients	webbench2.c	/^int clients=1;$/;"	v
failed	webbench.c	/^int failed=0;$/;"	v
failed	webbench1.c	/^int failed=0;$/;"	v
failed	webbench2.c	/^int failed=0;$/;"	v
force	webbench.c	/^int force=0;$/;"	v
force	webbench1.c	/^int force=0;$/;"	v
force	webbench2.c	/^int force=0;$/;"	v
force_reload	webbench.c	/^int force_reload=0;$/;"	v
force_reload	webbench1.c	/^int force_reload=0;$/;"	v
force_reload	webbench2.c	/^int force_reload=0;$/;"	v
host	webbench.c	/^char host[MAXHOSTNAMELEN];$/;"	v
host	webbench1.c	/^char host[MAXHOSTNAMELEN];$/;"	v
host	webbench2.c	/^char host[MAXHOSTNAMELEN];$/;"	v
http10	webbench.c	/^int http10=1; \/* 0 - http\/0.9, 1 - http\/1.0, 2 - http\/1.1 *\/$/;"	v
http10	webbench1.c	/^int http10=1; \/* 0 - http\/0.9, 1 - http\/1.0, 2 - http\/1.1 *\/$/;"	v
http10	webbench2.c	/^int http10=1; \/* 0 - http\/0.9, 1 - http\/1.0, 2 - http\/1.1 *\/$/;"	v
keep_alive	webbench.c	/^bool keep_alive = false;$/;"	v
keep_alive	webbench1.c	/^bool keep_alive = false;$/;"	v
keep_alive	webbench2.c	/^bool keep_alive = false;$/;"	v
long_options	webbench.c	/^static const struct option long_options[]=$/;"	v	typeref:struct:option	file:
long_options	webbench1.c	/^static const struct option long_options[]=$/;"	v	typeref:struct:option	file:
long_options	webbench2.c	/^static const struct option long_options[]=$/;"	v	typeref:struct:option	file:
main	webbench.c	/^int main(int argc, char *argv[])$/;"	f
main	webbench1.c	/^int main(int argc, char *argv[])$/;"	f
main	webbench2.c	/^int main(int argc, char *argv[])$/;"	f
method	webbench.c	/^int method=METHOD_GET;$/;"	v
method	webbench1.c	/^int method=METHOD_GET;$/;"	v
method	webbench2.c	/^int method=METHOD_GET;$/;"	v
mypipe	webbench.c	/^int mypipe[2];$/;"	v
mypipe	webbench1.c	/^int mypipe[2];$/;"	v
mypipe	webbench2.c	/^int mypipe[2];$/;"	v
proxyhost	webbench.c	/^char *proxyhost=NULL;$/;"	v
proxyhost	webbench1.c	/^char *proxyhost=NULL;$/;"	v
proxyhost	webbench2.c	/^char *proxyhost=NULL;$/;"	v
proxyport	webbench.c	/^int proxyport=80;$/;"	v
proxyport	webbench1.c	/^int proxyport=80;$/;"	v
proxyport	webbench2.c	/^int proxyport=80;$/;"	v
request	webbench.c	/^char request[REQUEST_SIZE];$/;"	v
request	webbench1.c	/^char request[REQUEST_SIZE];$/;"	v
request	webbench2.c	/^char request[REQUEST_SIZE];$/;"	v
speed	webbench.c	/^int speed=0;$/;"	v
speed	webbench1.c	/^int speed=0;$/;"	v
speed	webbench2.c	/^int speed=0;$/;"	v
timerexpired	webbench.c	/^volatile int timerexpired=0;$/;"	v
timerexpired	webbench1.c	/^volatile int timerexpired=0;$/;"	v
timerexpired	webbench2.c	/^volatile int timerexpired=0;$/;"	v
usage	webbench.c	/^static void usage(void)$/;"	f	file:
usage	webbench1.c	/^static void usage(void)$/;"	f	file:
usage	webbench2.c	/^static void usage(void)$/;"	f	file:
